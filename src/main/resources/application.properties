server.port=8071
spring.application.name=banking-service
spring.kafka.bootstrap-servers=localhost:9092

# Kafka consumer properties
spring.kafka.consumer.group-id=customer-balance-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.schema.registry.url=http://localhost:8081

# Kafka producer properties
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.properties.schema.registry.url=http://localhost:8081

# Avro schema registry URL
spring.kafka.properties.schema.registry.url=http://localhost:8081

# Enable Avro specific reader for consumer and producer
spring.kafka.consumer.properties.specific.avro.reader=true
spring.kafka.producer.properties.specific.avro.reader=true
































### Kafka bootstrap servers
#spring.kafka.bootstrap-servers=http://localhost:8082
#spring.kafka.properties.schema.registry.url=http://localhost:8081
#
#
### Producer configuration
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.properties.spring.json.trusted.packages=*
#spring.kafka.producer.properties.schema.registry.url=http://localhost:8081
#
#
### Consumer configuration
#spring.kafka.consumer.group-id=my-group
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=*
#spring.kafka.consumer.properties.specific.avro.reader=true



